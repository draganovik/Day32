{"remainingRequest":"/Users/draganovik/FTN/Project Day32/Day32_master/node_modules/babel-loader/lib/index.js!/Users/draganovik/FTN/Project Day32/Day32_master/node_modules/vuex-persist/dist/esm/index.js","dependencies":[{"path":"/Users/draganovik/FTN/Project Day32/Day32_master/node_modules/vuex-persist/dist/esm/index.js","mtime":1587237141866},{"path":"/Users/draganovik/FTN/Project Day32/Day32_master/node_modules/cache-loader/dist/cjs.js","mtime":1587237137499},{"path":"/Users/draganovik/FTN/Project Day32/Day32_master/node_modules/babel-loader/lib/index.js","mtime":1587237137018}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../src/MockStorage.ts","../../src/SimplePromiseQueue.ts","../../src/utils.ts","../../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by championswimmer on 22/07/17.\n */\nlet MockStorage: typeof Storage | undefined\n\n// @ts-ignore\nif (process.env.MODULE_FORMAT !== 'umd') {\n  MockStorage = class implements Storage {\n    [index: number]: string;\n    [key: string]: any;\n\n    public get length(): number {\n      return Object.keys(this).length\n    }\n\n    public key(index: number): string | any {\n      return Object.keys(this)[index]\n    }\n\n    public setItem(key: string, data: any): void {\n      this[key] = data.toString()\n    }\n    public getItem(key: string): string {\n      return this[key]\n    }\n    public removeItem(key: string): void {\n      delete this[key]\n    }\n    public clear(): void {\n      for (const key of Object.keys(this)) {\n        delete this[key]\n      }\n    }\n  }\n}\n\nexport { MockStorage }\n","// tslint:disable: variable-name\nexport default class SimplePromiseQueue {\n  private readonly _queue: Array<Promise<void>> = []\n  private _flushing = false\n\n  public enqueue(promise: Promise<void>) {\n    this._queue.push(promise)\n    if (!this._flushing) { return this.flushQueue() }\n    return Promise.resolve()\n  }\n\n  private flushQueue() {\n    this._flushing = true\n\n    const chain = (): Promise<void> | void => {\n      const nextTask = this._queue.shift()\n      if (nextTask) {\n        return nextTask.then(chain)\n      } else {\n        this._flushing = false\n      }\n    }\n    return Promise.resolve(chain())\n  }\n}\n","import lodashMerge from 'lodash.merge'\n\nexport function merge(into: any, from: any) {\n  return lodashMerge({}, into, from)\n}\n","/**\n * Created by championswimmer on 18/07/17.\n */\nimport {Mutation, MutationPayload, Payload, Plugin, Store} from 'vuex'\nimport {AsyncStorage} from './AsyncStorage'\nimport { MockStorage } from './MockStorage'\nimport {PersistOptions} from './PersistOptions'\nimport SimplePromiseQueue from './SimplePromiseQueue'\nimport {merge} from './utils'\n\nlet FlattedJSON = JSON\n\n/**\n * A class that implements the vuex persistence.\n * @type S type of the 'state' inside the store (default: any)\n */\nexport class VuexPersistence<S> implements PersistOptions<S> {\n  public asyncStorage: boolean\n  public storage: Storage | AsyncStorage\n  public restoreState: (key: string, storage?: AsyncStorage | Storage) => Promise<S> | S\n  public saveState: (key: string, state: {}, storage?: AsyncStorage | Storage) => Promise<void> | void\n  public reducer: (state: S) => Partial<S>\n  public key: string\n  public filter: (mutation: Payload) => boolean\n  public modules: string[]\n  public strictMode: boolean\n  public supportCircular: boolean\n\n  /**\n   * The plugin function that can be used inside a vuex store.\n   */\n  public plugin: Plugin<S>\n  /**\n   * A mutation that can be used to restore state\n   * Helpful if we are running in strict mode\n   */\n  public RESTORE_MUTATION: Mutation<S>\n  public subscribed: boolean\n\n  // tslint:disable-next-line:variable-name\n  private _mutex = new SimplePromiseQueue()\n\n  /**\n   * Create a {@link VuexPersistence} object.\n   * Use the <code>plugin</code> function of this class as a\n   * Vuex plugin.\n   * @param {PersistOptions} options\n   */\n  public constructor(options?: PersistOptions<S>) {\n    if (typeof options === 'undefined') options = {} as PersistOptions<S>\n    this.key = ((options.key != null) ? options.key : 'vuex')\n\n    this.subscribed = false\n    this.supportCircular = options.supportCircular || false\n    if (this.supportCircular) {\n      FlattedJSON = require('flatted')\n    }\n\n    // @ts-ignore\n    if (process.env.NODE_ENV === 'production') {\n      this.storage = options.storage ||  window.localStorage\n    } else {\n      // @ts-ignore\n      if (process.env.MODULE_FORMAT !== 'umd') {\n        this.storage = options.storage || (typeof window !== 'undefined' ? window.localStorage : new MockStorage!())\n      } else {\n        // If UMD module, then we will only be having localStorage\n        this.storage = options.storage || window.localStorage\n      }\n    }\n\n    /**\n     * How this works is -\n     *  1. If there is options.reducer function, we use that, if not;\n     *  2. We check options.modules;\n     *    1. If there is no options.modules array, we use entire state in reducer\n     *    2. Otherwise, we create a reducer that merges all those state modules that are\n     *        defined in the options.modules[] array\n     * @type {((state: S) => {}) | ((state: S) => S) | ((state: any) => {})}\n     */\n    this.reducer = (\n      (options.reducer != null)\n        ? options.reducer\n        : (\n          (options.modules == null)\n            ? ((state: S) => state)\n            : (\n              (state: any) =>\n                (options!.modules as string[]).reduce((a, i) =>\n                  merge(a, {[i]: state[i]}), {/* start empty accumulator*/})\n            )\n        )\n    )\n\n    this.filter = options.filter || ((mutation) => true)\n\n    this.strictMode = options.strictMode || false\n\n    this.RESTORE_MUTATION = function RESTORE_MUTATION(state: S, savedState: any) {\n      const mergedState = merge(state, savedState || {})\n      for (const propertyName of Object.keys(mergedState)) {\n        (this as any)._vm.$set(state, propertyName, mergedState[propertyName])\n      }\n    }\n\n    this.asyncStorage = options.asyncStorage || false\n\n    if (this.asyncStorage) {\n\n      /**\n       * Async {@link #VuexPersistence.restoreState} implementation\n       * @type {((key: string, storage?: Storage) =>\n       *      (Promise<S> | S)) | ((key: string, storage: AsyncStorage) => Promise<any>)}\n       */\n      this.restoreState = (\n        (options.restoreState != null)\n          ? options.restoreState\n          : ((key: string, storage: AsyncStorage) =>\n              (storage).getItem(key)\n                .then((value) =>\n                  typeof value === 'string' // If string, parse, or else, just return\n                    ? (\n                      this.supportCircular\n                        ? FlattedJSON.parse(value || '{}')\n                        : JSON.parse(value || '{}')\n                    )\n                    : (value || {})\n                )\n          )\n      )\n\n      /**\n       * Async {@link #VuexPersistence.saveState} implementation\n       * @type {((key: string, state: {}, storage?: Storage) =>\n       *    (Promise<void> | void)) | ((key: string, state: {}, storage?: Storage) => Promise<void>)}\n       */\n      this.saveState = (\n        (options.saveState != null)\n          ? options.saveState\n          : ((key: string, state: {}, storage: AsyncStorage) =>\n              (storage).setItem(\n                key, // Second argument is state _object_ if asyc storage, stringified otherwise\n                // do not stringify the state if the storage type is async\n                (this.asyncStorage\n                    ? merge({}, state || {})\n                    : (\n                      this.supportCircular\n                        ? FlattedJSON.stringify(state) as any\n                        : JSON.stringify(state) as any\n                    )\n                )\n              )\n          )\n      )\n\n      /**\n       * Async version of plugin\n       * @param {Store<S>} store\n       */\n      this.plugin = (store: Store<S>) => {\n        /**\n         * For async stores, we're capturing the Promise returned\n         * by the `restoreState()` function in a `restored` property\n         * on the store itself. This would allow app developers to\n         * determine when and if the store's state has indeed been\n         * refreshed. This approach was suggested by GitHub user @hotdogee.\n         * See https://github.com/championswimmer/vuex-persist/pull/118#issuecomment-500914963\n         * @since 2.1.0\n         */\n        (store as any).restored = ((this.restoreState(this.key, this.storage)) as Promise<S>).then((savedState) => {\n          /**\n           * If in strict mode, do only via mutation\n           */\n          if (this.strictMode) {\n            store.commit('RESTORE_MUTATION', savedState)\n          } else {\n            store.replaceState(merge(store.state, savedState || {}))\n          }\n          this.subscriber(store)((mutation: MutationPayload, state: S) => {\n            if (this.filter(mutation)) {\n              this._mutex.enqueue(\n                this.saveState(this.key, this.reducer(state), this.storage) as Promise<void>\n              )\n            }\n          })\n          this.subscribed = true\n        })\n      }\n    } else {\n\n      /**\n       * Sync {@link #VuexPersistence.restoreState} implementation\n       * @type {((key: string, storage?: Storage) =>\n       *    (Promise<S> | S)) | ((key: string, storage: Storage) => (any | string | {}))}\n       */\n      this.restoreState = (\n        (options.restoreState != null)\n          ? options.restoreState\n          : ((key: string, storage: Storage) => {\n            const value = (storage).getItem(key)\n            if (typeof value === 'string') {// If string, parse, or else, just return\n              return (\n                this.supportCircular\n                  ? FlattedJSON.parse(value || '{}')\n                  : JSON.parse(value || '{}')\n              )\n            } else {\n              return (value || {})\n            }\n          })\n      )\n\n      /**\n       * Sync {@link #VuexPersistence.saveState} implementation\n       * @type {((key: string, state: {}, storage?: Storage) =>\n       *     (Promise<void> | void)) | ((key: string, state: {}, storage?: Storage) => Promise<void>)}\n       */\n      this.saveState = (\n        (options.saveState != null)\n          ? options.saveState\n          : ((key: string, state: {}, storage: Storage) =>\n              (storage).setItem(\n                key, // Second argument is state _object_ if localforage, stringified otherwise\n                (\n                  this.supportCircular\n                    ? FlattedJSON.stringify(state) as any\n                    : JSON.stringify(state) as any\n                )\n              )\n          )\n      )\n\n      /**\n       * Sync version of plugin\n       * @param {Store<S>} store\n       */\n      this.plugin = (store: Store<S>) => {\n        const savedState = this.restoreState(this.key, this.storage) as S\n\n        if (this.strictMode) {\n          store.commit('RESTORE_MUTATION', savedState)\n        } else {\n          store.replaceState(merge(store.state, savedState || {}))\n        }\n\n        this.subscriber(store)((mutation: MutationPayload, state: S) => {\n          if (this.filter(mutation)) {\n            this.saveState(this.key, this.reducer(state), this.storage)\n          }\n        })\n\n        this.subscribed = true\n      }\n    }\n  }\n\n  /**\n   * Creates a subscriber on the store. automatically is used\n   * when this is used a vuex plugin. Not for manual usage.\n   * @param store\n   */\n  private subscriber = (store: Store<S>) =>\n    (handler: (mutation: MutationPayload, state: S) => any) => store.subscribe(handler)\n}\n\nexport {\n  MockStorage, AsyncStorage, PersistOptions\n}\n\nexport default VuexPersistence\n"]}]}