{"remainingRequest":"/Users/draganovik/FTN/Project Day32/day32_dev/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/draganovik/FTN/Project Day32/day32_dev/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/draganovik/FTN/Project Day32/day32_dev/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/draganovik/FTN/Project Day32/day32_dev/src/components/EventEdit.vue?vue&type=template&id=7c1c2478&","dependencies":[{"path":"/Users/draganovik/FTN/Project Day32/day32_dev/src/components/EventEdit.vue","mtime":1582864836130},{"path":"/Users/draganovik/FTN/Project Day32/day32_dev/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/draganovik/FTN/Project Day32/day32_dev/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/draganovik/FTN/Project Day32/day32_dev/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/draganovik/FTN/Project Day32/day32_dev/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}